// Generated by CoffeeScript 1.3.3
(function() {
  var App, AppView, Transaction, TransactionList, TransactionView, Transactions;

  window.Cilantro = {};

  Transaction = Backbone.Model.extend({
    validate: function(attrs) {},
    clear: function() {
      return this.destroy();
    }
  });

  TransactionList = Backbone.Collection.extend({
    model: Transaction,
    url: "/transactions"
  });

  TransactionView = Backbone.View.extend({
    tagName: "tr",
    template: _.template("<td><%= _account.name %></td>\n<td><%= name %></td>\n<td class=\"amount <%= amount > 0 ? 'positive' : 'negative' %>\"><%= amount %></td>\n<td><%= date %></td>"),
    initialize: function() {
      this.model.bind("change", this.render, this);
      return this.model.bind("destroy", this.remove, this);
    },
    render: function() {
      this.$el.html(this.template(this.model.toJSON()));
      return this;
    },
    clear: function() {
      return this.model.clear();
    }
  });

  AppView = Backbone.View.extend({
    initialize: function() {
      Transactions.bind('add', this.addOne, this);
      Transactions.bind('reset', this.reset, this);
      return Transactions.bind('all', this.render, this);
    },
    reset: function() {
      $("#transactions-tbody").html('');
      return this.addAll();
    },
    render: function() {},
    addOne: function(transaction) {
      var html, view;
      view = new TransactionView({
        model: transaction
      });
      html = view.render().el;
      return $("#transactions-tbody").append(html);
    },
    addAll: function() {
      return Transactions.each(this.addOne);
    }
  });

  App = {};

  Transactions = {};

  Cilantro.App = function(initialModels) {
    var initialCollection;
    Transactions = new TransactionList;
    initialCollection = Transactions;
    App = new AppView({
      collection: initialCollection
    });
    initialCollection.reset(initialModels);
    return App;
  };

}).call(this);
